# name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
#file.pipe <- pipe(pipe)
#name <- read.csv(file.pipe)
l = dim(name)[1]
if (nameStr != 'ho'){
print(l)
name <- name[seq.int(1L,l,100L),]
}
name$set <- nameStr
return(name)
}
loadSet <-function(name){
# load files
nameStr = deparse(substitute(name))
print(nameStr)
#pipe doesnt work but should since we want to prune BEFORE reading in, like we do it here.
#pipe <- "awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < RAC_ho.csv"
#print(pipe)
# name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
#file.pipe <- pipe(pipe)
#name <- read.csv(file.pipe)
l = dim(name)[1]
if (nameStr != 'ho'){
print(l)
name <- name[seq.int(1L,l,100L),]
}
name$set <- nameStr
return(name)
}
standardizeSet <-function(rf133racs, center, scale){
# standardize data with homo moments
rf133racs_data <- scale(rf133racs, center=center, scale=scale)
rf133racs_data <- as.data.frame(rf133racs_data)
return(rf133racs_data)
}
homo_racs <- loadSet(ho)
homo_racs$set[1621:2212]='ho_b'
ssadc_racs <- loadSet(ssadc)
ssadc_b_racs <- loadSet(ssadc_b)
ssac_b_racs <- loadSet(ssac_b)
ss_racs <- rbind(rbind(ssadc_racs, ssadc_b_racs), ssac_b_racs)
fo_racs <- loadSet(fo)
ft_m_racs <-loadSet(ft) # contains only mono
ft_b_racs <- loadSet(ft_b)
ft_racs <- rbind(ft_m_racs, ft_b_racs)
superset <- do.call("rbind", list(homo_racs, ss_racs, fo_racs, ft_racs))
loadSet <-function(name){
# load files
nameStr = deparse(substitute(name))
print(nameStr)
#pipe doesnt work but should since we want to prune BEFORE reading in, like we do it here.
#pipe <- "awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < RAC_ho.csv"
#print(pipe)
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
#file.pipe <- pipe(pipe)
#name <- read.csv(file.pipe)
l = dim(name)[1]
if (nameStr != 'ho'){
print(l)
name <- name[seq.int(1L,l,100L),]
}
name$set <- nameStr
return(name)
}
standardizeSet <-function(rf133racs, center, scale){
# standardize data with homo moments
rf133racs_data <- scale(rf133racs, center=center, scale=scale)
rf133racs_data <- as.data.frame(rf133racs_data)
return(rf133racs_data)
}
homo_racs <- loadSet(ho)
homo_racs$set[1621:2212]='ho_b'
ssadc_racs <- loadSet(ssadc)
ssadc_b_racs <- loadSet(ssadc_b)
ssac_b_racs <- loadSet(ssac_b)
ss_racs <- rbind(rbind(ssadc_racs, ssadc_b_racs), ssac_b_racs)
fo_racs <- loadSet(fo)
ft_m_racs <-loadSet(ft) # contains only mono
ft_b_racs <- loadSet(ft_b)
ft_racs <- rbind(ft_m_racs, ft_b_racs)
superset <- do.call("rbind", list(homo_racs, ss_racs, fo_racs, ft_racs))
# read in descriptors
load(file="selected_all.R")
load(file="selected_rf_41.Rda")
# remove alpha and ox from "rf41" and "all" because we only want topology related racs for the fingerprint.
rf39vars <- selected_rf_41[!(selected_rf_41 %in% c('alpha','ox'))]
rf153vars <- selected_all[!(selected_all %in% c('alpha','ox'))]
homo_rf39racs <- homo_racs[,rf39vars]
ssadc_rf39racs <- ssadc_racs[,rf39vars]
homo_rf39racs <- homo_racs[,rf39vars]
homo_rf153racs <- homo_racs[,rf153vars]
ssadc_rf39racs <- ssadc_racs[,rf39vars]
ssadc_rf153racs <- ssadc_racs[,rf153vars]
ssadc_b_rf39racs <- ssadc_b_racs[,rf39vars]
ssadc_b_rf153racs <- ssadc_b_racs[,rf153vars]
ssac_b_rf39racs <- ssac_b_racs[,rf39vars]
ssac_b_rf153racs <- ssac_b_racs[,rf153vars]
ss_rf39racs <- ss_racs[,rf39vars]
ss_rf153racs <- ss_racs[,rf153vars]
fo_rf39racs <- fo_racs[,rf39vars]
fo_rf153racs <- fo_racs[,rf153vars]
ft_m_rf39racs <- ft_m_racs[,rf39vars]
ft_m_rf153racs <- ft_m_racs[,rf153vars]
ft_b_rf39racs <- ft_b_racs[,rf39vars]
ft_b_rf153racs <- ft_b_racs[,rf153vars]
ft_rf39racs <- ft_racs[,rf39vars]
ft_rf153racs <- ft_racs[,rf153vars]
superset_rf39racs <- superset[,rf39vars]
superset_rf153racs <- superset[,rf153vars]
split_results_39racs <- split_results[,rf39vars]
split_results_153racs <- split_results[,rf153vars]
props <- (split_results[,!(colnames(split_results) %in% (rf153vars))])
# 39
superset_rf39racs <- superset_rf39racs[ , apply(superset_rf39racs, 2, var) != 0]
homo_rf39racs <- homo_rf39racs[ , apply(superset_rf39racs, 2, var) != 0]
ss_rf39racs   <- ss_rf39racs[ , apply(superset_rf39racs, 2, var) != 0]
ft_rf39racs <- ft_rf39racs[ , apply(superset_rf39racs, 2, var) != 0]
fo_rf39racs   <- fo_rf39racs[ , apply(homo_rf39racs, 2, var) != 0]
props$goodConvergence <- as.factor(props$ox_2_HS_flag_oct + props$ox_2_LS_flag_oct + props$ox_3_LS_flag_oct + props$ox_3_HS_flag_oct)
# 39
superset_rf39racs_data <- scale(superset_rf39racs, center=TRUE, scale=TRUE)
superset_rf39racs_center <-attr(superset_rf39racs_data, 'scaled:center')
superset_rf39racs_scale <- attr(superset_rf39racs_data, 'scaled:scale')
superset_rf39racs_data <- as.data.frame(superset_rf39racs_data)
# 39
homo_rf39racs_data <- standardizeSet(homo_rf39racs, superset_rf39racs_center, superset_rf39racs_scale)
ss_rf39racs_data <- standardizeSet(ss_rf39racs, superset_rf39racs_center, superset_rf39racs_scale)
fo_rf39racs_data <- standardizeSet(fo_rf39racs, superset_rf39racs_center, superset_rf39racs_scale)
ft_rf39racs_data <- standardizeSet(ft_rf39racs, superset_rf39racs_center, superset_rf39racs_scale)
split_results_rf39racs_data <- standardizeSet(split_results_rf39racs, superset_rf39racs_center, superset_rf39racs_scale)
pca2 = prcomp(superset_rf39racs_data,scale. = FALSE) #scale is FALSE because we standardize above
eigendecay2 = pca2$sdev
plot(eigendecay2)
scores2 = as.data.frame(pca2$x)
#>>>>>>>>>>>>>>>>>39
# mc.Z.0.all is the metal charge and since autocorrelation goes Z1*Z2, we sqrt it
scores2$metal <- revalue(as.factor(sqrt(superset_rf39racs$mc.Z.0.all)),c('24'='Cr','25'='Mn','26'='Fe','27'='Co'))
# the sqrt of Z1Z2 of a ligand centric first atom is the CA. below we have a cont spectr of atoms bc avg in ss is an atom in R
#scores$cai <- revalue(as.factor(sqrt(homo_rf39racs$lc.Z.0.eq)),c('6'='C','7'='N','8'='O','15'='P','16'='S'))
scores2$cai <- (4*sqrt(superset_rf39racs$lc.Z.0.eq)+2*sqrt(superset_rf39racs$lc.Z.0.ax))/6
scores2$set = 'SU'
# projection of sets into SU(perset) coordinates and reassignments
projHomoIntoSu2 <- as.data.frame(predict(pca2, homo_rf39racs_data))
projHomoIntoSu2$set <- 'homo'
projHomoIntoSu2$metal <- revalue(as.factor(sqrt(homo_rf39racs$mc.Z.0.all)), c('24'='Cr','25'='Mn','26'='Fe','27'='Co'))
projHomoIntoSu2$cai <- (4*sqrt(homo_rf39racs$lc.Z.0.eq) + 2*sqrt(homo_rf39racs$lc.Z.0.ax))/6
projSsIntoSu2 <- as.data.frame(predict(pca2, ss_rf39racs_data))
projSsIntoSu2$set <- 'ss'
projSsIntoSu2$metal <- revalue(as.factor(sqrt(ss_rf39racs$mc.Z.0.all)), c('24'='Cr','25'='Mn','26'='Fe','27'='Co'))
projSsIntoSu2$cai <- (4*sqrt(ss_rf39racs$lc.Z.0.eq) + 2*sqrt(ss_rf39racs$lc.Z.0.ax))/6
projFoIntoSu2 <- as.data.frame(predict(pca2, fo_rf39racs_data))
projFoIntoSu2$set <- 'fo'
projFoIntoSu2$metal <- revalue(as.factor(sqrt(fo_rf39racs$mc.Z.0.all)), c('24'='Cr','25'='Mn','26'='Fe','27'='Co'))
projFoIntoSu2$cai <- (4*sqrt(fo_rf39racs$lc.Z.0.eq) + 2*sqrt(fo_rf39racs$lc.Z.0.ax))/6
projFtIntoSu2 <- as.data.frame(predict(pca2, ft_rf39racs_data))
projFtIntoSu2$set <- 'ft'
projFtIntoSu2$metal <- revalue(as.factor(sqrt(ft_rf39racs$mc.Z.0.all)), c('24'='Cr','25'='Mn','26'='Fe','27'='Co'))
projFtIntoSu2$cai <- (4*sqrt(ft_rf39racs$lc.Z.0.eq) + 2*sqrt(ft_rf39racs$lc.Z.0.ax))/6
projSplitIntoSu2 <- as.data.frame(predict(pca2, split_results_39racs_data))
projSplitIntoSu2$set <- 'calcHomo'
projSplitIntoSu2$metal <- revalue(as.factor(sqrt(split_results_39racs$mc.Z.0.all)), c('24'='Cr','25'='Mn','26'='Fe','27'='Co'))
projSplitIntoSu2$cai <- (4*sqrt(split_results_39racs$lc.Z.0.eq) + 2*sqrt(split_results_39racs$lc.Z.0.ax))/6
require(plyr)
require(dplyr)
require(ggplot2)
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),100L),], size = 0.1, aes(color=cai))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_monoANDbi_HoIntoSU.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=cai))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_monoANDbi_HoIntoSU.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC3, y=PC2)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=cai))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_monoANDbi_HoIntoSU.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC4, y=PC2)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=cai))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_monoANDbi_HoIntoSU.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC4, y=PC2)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=cai))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_monoANDbi_HoIntoSU.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC4, y=PC3)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=cai))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_monoANDbi_HoIntoSU.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC4, y=PC3)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=metal))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_monoANDbi_HoIntoSU.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
dev.off()
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC3)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=metal))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=metal))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC3)) + # color=cai
geom_point(size = 1, color = 'orange')
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC3)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=metal))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC4)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=metal))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC2, y=PC4)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=metal))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC3, y=PC4)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=metal))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC5, y=PC4)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=metal))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=cai))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=set))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
colnames(homo_rf133racs)
colnames(homo_racs)
ho_racs$set
homo_racs$set
superset$set
homo_rf39racs
colnames(homo_rf39racs)
superset_setnames <- superset$set
superset_setnames
dim(superset_setnames)
length(superset_setnames)
superset_setnames <-  superset_rf153racs[ , apply(superset_rf153racs, 2, var) != 0]
length(superset_setnames)
dim(superset_setnames)
superset_setnames <- superset$set
homo_rf153racs
homo_rf153racs[ , apply(superset_rf153racs, 2, var) != 0]
apply(superset_rf153racs, 2, var)
dim(superset_rf39racs)
# 39
superset_rf39racs <- superset_rf39racs[ , apply(superset_rf39racs, 2, var) != 0]
colnames(superset_rf39racs)
dim(superset_rf39racs)
superset_setnames
dim(superset_setnames)
length(superset_setnames)
dim(superset_rf39racs)
# 39
superset_rf39racs <- superset_rf39racs[ , apply(superset_rf39racs, 2, var) != 0]
homo_rf39racs <- homo_rf39racs[ , apply(superset_rf39racs, 2, var) != 0]
ss_rf39racs   <- ss_rf39racs[ , apply(superset_rf39racs, 2, var) != 0]
ft_rf39racs <- ft_rf39racs[ , apply(superset_rf39racs, 2, var) != 0]
fo_rf39racs   <- fo_rf39racs[ , apply(homo_rf39racs, 2, var) != 0]
split_results_rf39racs <- split_results_39racs[ , apply(superset_rf39racs, 2, var) != 0]
dim(scores2)
scores$set = superset_setnames
#scores2$set = 'SU'
scores$set = superset_setnames
#scores2$set = 'SU'
scores2$set = superset_setnames
projHomoIntoSu2$set <- homo_racs$set
# is it right that we dont use the normalized data for the last 2 lines???
projSsIntoSu2$set <- ss_racs$set
projFoIntoSu2$set <- fo_racs$set
projFtIntoSu2$set <- ft_racs$set
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 1, color = 'orange')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=set))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 1, color = 'black')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=set))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 0.1, color = 'black')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=set))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 0.1, color = 'black')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 1, aes(color=set))
g <- g + theme_light() #+ facet_wrap('metal')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
g <- g + theme(legend.text=element_text(size=X))
g <- g + theme_light() #+ facet_wrap('set')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
g <- g + theme(legend.text=element_text(size=2))
g <- g + theme_light() #+ facet_wrap('set')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 0.1, color = 'black')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=set))
g <- g + theme(legend.text=element_text(size=2))
g <- g + theme_light() #+ facet_wrap('set')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 0.1, color = 'black')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=set))
g <- g + theme(legend.key.size = 2)
g <- g + theme_light() #+ facet_wrap('set')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 0.1, color = 'black')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=set))
g <- g + theme(legend.key.size = 2)
g <- g  #+ facet_wrap('set')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
g <- g + theme(legend.key.size = element_rect(size = 2, fill = 'white'))
g <- g + guides(shape = guide_legend(override.aes = list(size = 5)))
g <- g  #+ facet_wrap('set')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 0.1, color = 'black')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=set))
g <- g + guides(shape = guide_legend(override.aes = list(size = 5)))
g <- g  #+ facet_wrap('set')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
# eeeeeeeeeeeeeeeebi-----------------------
g <- ggplot(data=projHomoIntoSu2[seq.int(1L,length(projHomoIntoSu2$PC1),1L),],
aes(x=PC1, y=PC2)) + # color=cai
geom_point(size = 0.1, color = 'black')
g <- g + geom_point(data=scores2[seq.int(1L,length(scores2$PC1),1L),], size = 0.1, aes(color=set))
g <- g + guides(color = guide_legend(override.aes = list(size = 5)))
g <- g  #+ facet_wrap('set')
# cairo_pdf(file="pca_rf39_HoIntoSU_bymetal.pdf",width = 6, height = 5)
print(g + ggtitle("orange: HO, grad: SU"))
loadSet <-function(name){
# load files
nameStr = deparse(substitute(name))
print(nameStr)
#pipe doesnt work but should since we want to prune BEFORE reading in, like we do it here.
pipeStr <- "awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < RAC_ho.csv"
print(pipeStr)
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
file.pipe <- pipe(pipeStr)
name <- read.csv(file.pipe)
print(name)
l = dim(name)[1]
if (nameStr != 'ho'){
print(l)
name <- name[seq.int(1L,l,100L),]
}
name$set <- nameStr
return(name)
}
homo_racs <- loadSet(ho)
getwd()
piep
pipeSTr
pipeStr
pipeStr <- "awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < RAC_ho.csv"
print(pipeStr)
pipeStr
file.pipe <- pipe(pipeStr)
file.pipe
file.pipe.read()
names(file.pipe)
type(file.pipe)
class(file.pipe)
file.pipe
file.pipe[1]
file.pipe[]
file.pipe[2]
file.pipe[0]
file.pipe[1]
file.pipe[15]
file.pipe
file.pipe.open()
file.pipe
read.csv(file.pipe)
setwd("~/MIT/smu/compl")
read.csv(file.pipe)
pipeStr <- "awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < /home/sgugler/MIT/smu/compl/RAC_ho.csv"
file.pipe
file.pipe <- pipe(pipeStr)
read.csv(file.pipe)
file.pipe <- pipe("awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < RAC_ho.csv ")
read.csv(file.pipe)
read.csv(file = file.pipe)
file.pipe.close()
require(pipeR)
install.packages("pipeR")
file.pipe <- pipe("awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < RAC_ho.csv ")
file.pipe
read.csv(file = file.pipe)
read.csv(file = file.pipe)
read(file = file.pipe)
load(file.pipe)
execute(file.pipe)
??pipe
open(file.pipe)
pipeStr <- "/usr/bin/awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < /home/sgugler/MIT/smu/compl/RAC_ho.csv"
print(pipeStr)
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
file.pipe <- pipe(pipeStr)
name <- read.csv(file.pipe)
??pipe
open(file.pipe)
file.pipe <- pipe("awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < RAC_ho.csv ",)
isOpen(file.pipe)
open(file.pipe)
file.pipe <- pipe("ls")
open(file.pipe)
