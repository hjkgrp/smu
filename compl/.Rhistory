source('~/.active-rstudio-document')
loadSet <-function(name){
# load files
nameStr = deparse(substitute(name))
print(nameStr)
pipeStr <- paste("/usr/bin/awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < /home/sgugler/MIT/smu/compl/RAC_", nameStr, '.csv',sep='')
print(pipeStr)
# name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
name <- read.csv(pipe(pipeStr))
print(name)
l = dim(name)[1]
# if (nameStr != 'ho'){
#   print(l)
#   name <- name[seq.int(1L,l,100L),]
# }
name$set <- nameStr
return(name)
}
homo_racs <- loadSet(ho)
loadSet <-function(name){
nameStr = deparse(substitute(name))
print(nameStr)
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < RAC_", nameStr, '.csv',sep='')
print(pipeStr)
# name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
name <- read.csv(pipe(pipeStr))
l = dim(name)[1]
# if (nameStr != 'ho'){
#   print(l)
#   name <- name[seq.int(1L,l,100L),]
# }
name$set <- nameStr
return(name)
}
homo_racs <- loadSet(ho)
loadSet <-function(name){
nameStr = deparse(substitute(name))
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%10==0) print $1}' < RAC_", nameStr, '.csv',sep='')
print(pipeStr)
# name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
name <- read.csv(pipe(pipeStr))
l = dim(name)[1]
# if (nameStr != 'ho'){
#   print(l)
#   name <- name[seq.int(1L,l,100L),]
# }
name$set <- nameStr
return(name)
}
homo_racs <- loadSet(ho)
View(name)
loadSet <-function(name){
nameStr = deparse(substitute(name))
if (nameStr != 'ho'){
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%10==0) print $1}' < RAC_", nameStr, '.csv',sep='')
name <- read.csv(pipe(pipeStr))
} else {
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
}
name$set <- nameStr
}
homo_racs <- loadSet(ho)
homo_racs$set[1621:2212]='ho_b'
dim(homo_racs)
length(homo_racs)
loadSet <-function(name){
nameStr = deparse(substitute(name))
if (nameStr != 'ho'){
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%10==0) print $1}' < RAC_", nameStr, '.csv',sep='')
name <- read.csv(pipe(pipeStr))
} else {
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
}
name$set <- nameStr
return(name)
}
homo_racs <- loadSet(ho)
homo_racs$set[1621:2212]='ho_b'
length(homo_racs)
dim(homo_racs)
loadSet <-function(name){
nameStr = deparse(substitute(name))
if (nameStr != 'ho'){
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%1000==0) print $1}' < RAC_", nameStr, '.csv',sep='')
name <- read.csv(pipe(pipeStr))
} else {
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
}
name$set <- nameStr
return(name)
}
ssac_b_racs <- loadSet(ssac_b)
ssac_b_racs <- loadSet(ssac_b)
loadSet <-function(name){
nameStr = deparse(substitute(name))
if (nameStr != 'ho'){
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%100==0) print $1}' < RAC_", nameStr, '.csv',sep='')
name <- read.csv(pipe(pipeStr))
} else {
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
}
name$set <- nameStr
return(name)
}
ssac_b_racs <- loadSet(ssac_b)
homo_racs <- loadSet(ho)
homo_racs$set[1621:2212]='ho_b'
ssadc_racs <- loadSet(ssadc)
ssadc_b_racs <- loadSet(ssadc_b)
ssac_b_racs <- loadSet(ssac_b)
ss_racs <- rbind(rbind(ssadc_racs, ssadc_b_racs), ssac_b_racs)
fo_racs <- loadSet(fo)
ft_m_racs <-loadSet(ft) # contains only mono
ft_b_racs <- loadSet(ft_b)
ft_racs <- rbind(ft_m_racs, ft_b_racs)
superset <- do.call("rbind", list(homo_racs, ss_racs, fo_racs, ft_racs))
ssadc_racs <- loadSet(ssadc)
ssadc_b_racs <- loadSet(ssadc_b)
ssac_b_racs <- loadSet(ssac_b)
ss_racs <- rbind(rbind(ssadc_racs, ssadc_b_racs), ssac_b_racs)
homo_racs$set[1621:2212] <- 'ho_b'
ssracs <- rbind(ssadc_racs, ssadc_b_racs)
loadSet <-function(name){
nameStr = deparse(substitute(name))
if (nameStr != 'ho'){
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%4==0) print $1}' < RAC_", nameStr, '.csv',sep='')
name <- read.csv(pipe(pipeStr))
} else {
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
}
name$set <- nameStr
return(name)
}
ssadc_racs <- loadSet(ssadc)
ssadc_b_racs <- loadSet(ssadc_b)
ssac_b_racs <- loadSet(ssac_b)
ssracs <- rbind(ssadc_racs, ssadc_b_racs)
loadSet <-function(name){
nameStr = deparse(substitute(name))
if (nameStr != 'ho'){
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%100==0) print $1}' < RAC_", nameStr, '.csv',sep='')
name <- read.csv(pipe(pipeStr))
} else {
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
}
name$set <- nameStr
return(name)
}
calss(ssadc_racs)
class(ssadc_racs)
class(ssadc_b_racs)
type(ssadc_b_racs)
loadSet <-function(name){
nameStr = deparse(substitute(name))
if (nameStr != 'ho'){
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%100==0) print $1}' < RAC_", nameStr, '.csv',sep='')
name <- read.csv(pipe(pipeStr), header = TRUE)
} else {
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
}
name$set <- nameStr
return(name)
}
ssadc_racs <- loadSet(ssadc)
ssadc_b_racs <- loadSet(ssadc_b)
ssac_b_racs <- loadSet(ssac_b)
ssracs <- rbind(ssadc_racs, ssadc_b_racs)
ssadc_racs
View(ssac_b_racs)
if (nameStr != 'ho'){
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%100==1) print $1}' < RAC_", nameStr, '.csv',sep='')
name <- read.csv(pipe(pipeStr), header = TRUE)
} else {
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
}
name$set <- nameStr
loadSet <-function(name){
nameStr = deparse(substitute(name))
if (nameStr != 'ho'){
pipeStr <- paste("awk 'BEGIN{i=0}{i++;if (i%100==1) print $1}' < RAC_", nameStr, '.csv',sep='')
name <- read.csv(pipe(pipeStr), header = TRUE)
} else {
name <- read.csv(file = paste("RAC_",nameStr,".csv", sep=''), header = TRUE)
}
name$set <- nameStr
return(name)
}
ssadc_racs <- loadSet(ssadc)
ssadc_b_racs <- loadSet(ssadc_b)
ssac_b_racs <- loadSet(ssac_b)
ssracs <- rbind(ssadc_racs, ssadc_b_racs)
clear name
clc name
View(ssac_b_racs)
load("~/MIT/gib/consistent_descriptor_file.csv")
load("~/MIT/gib/unified_results_post.csv")
raw <- read.csv("http://pastebin.com/raw.php?i=L8cEKcxS",sep=",")
raw
raw[,2]<-factor(raw[,2],levels=c("Very Bad","Bad","Good","Very Good"),ordered=FALSE)
raw[,2]
freq
raw[,3]<-factor(raw[,3],levels=c("Very Bad","Bad","Good","Very Good"),ordered=FALSE)
raw[,4]<-factor(raw[,4],levels=c("Very Bad","Bad","Good","Very Good"),ordered=FALSE)
raw=raw[,c(2,3,4)] # getting rid of the "people" variable as I see no use for it
freq=table(col(raw), as.matrix(raw)) # get the counts of each factor levelraw[,3]<-factor(raw[,3],levels=c("Very Bad","Bad","Good","Very Good"),ordered=FALSE)
raw[,4]<-factor(raw[,4],levels=c("Very Bad","Bad","Good","Very Good"),ordered=FALSE)
raw=raw[,c(2,3,4)] # getting rid of the "people" variable as I see no use for it
freq=table(col(raw), as.matrix(raw)) # get the counts of each factor level
raw[,3]<-factor(raw[,3],levels=c("Very Bad","Bad","Good","Very Good"),ordered=FALSE)
raw[,4]<-factor(raw[,4],levels=c("Very Bad","Bad","Good","Very Good"),ordered=FALSE)
raw=raw[,c(2,3,4)] # getting rid of the "people" variable as I see no use for it
freq=table(col(raw), as.matrix(raw)) # get the counts of each factor level
freq
results
